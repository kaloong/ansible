---
#- name: Create kickstart file
#  template:
#    src: kickstart.cfg.j2
#    dest: "{{ inventory_dir }}/build/{{ inventory_hostname }}.cfg"
#
# Build ISO first then provision VM in VMWare?
# or
# Build VM first then provision ISO?
#
#
- name: Enable gather facts for ansible_os_family
  setup:

- name: Create tmp directory
  shell: mktemp -d
  register: tmpout
  tags:
    - build_iso 

- name: 
  stat: 
    path: "{{ tmpout.stdout }}"
  register: tmpdir
  tags:
    - build_iso 

- debug:
    msg: "New directory  {{ tmpdir }}"
  when: tmpdir.stat.exists
  tags:
    - build_iso 

#- name: Download boot images
#  shell: wget mirror.centos.org/centos/6/os/x86_64/isolinux/boot.msg
#  args:
#    chdir: "{{ tmpdir.stat.path }}"
#    executable: /bin/bash

#- name: Download 
#  get_url: 
#    url: http://mirror.centos.org/centos/6/os/x86_64/isolinux/{{ item }}
#    dest: "{{ tmpdir.stat.path }}/"
#  with_items:
#    - "isolinux.cfg"
#    - "boot.msg"
#    - "splash.jpg"  
- name: Create isolinux directory in tmp
  file:
    path: "{{ tmpdir.stat.path }}/isolinux"
    state: directory
    mode: 0755
  register: isolinux_target_dir  
  tags:
    - build_iso 

- name: Download isolinux boot files 
  get_url: 
    url: "{{ iso_image_url }}{{ item }}"
    dest: "{{ isolinux_target_dir.path }}"
  with_items: "{{ iso_boot_files }}"
  tags:
    - build_iso 

- name: Generate kickstart file
  template:
    src: kickstart6.ks.j2
    dest: "{{ isolinux_target_dir.path }}/{{ inventory_hostname }}.ks"
  tags:
    - build_iso 

- name: Generate isolinux config file
  template:
    src: isolinux6.cfg.j2
    dest: "{{ isolinux_target_dir.path }}/isolinux.cfg"
  tags:
    - build_iso 

- name: Generate boot ISO in ClearLinux
  shell: xorrisofs -V "OEMDRV" -o "/tmp/{{ inventory_hostname }}.iso" -b isolinux/isolinux.bin -c boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -J -r  "{{ tmpdir.stat.path }}"
  register: build_out
  when: ansible_os_family == "ClearLinux"
  tags:
    - build_iso 

- name: Generate boot ISO in OSX
  shell: mkisofs -V "OEMDRV" -o "/tmp/{{ inventory_hostname }}.iso" -b isolinux/isolinux.bin -c boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -J -r  "{{ tmpdir.stat.path }}"
  register: build_out
  when: ansible_os_family == "Darwin"
  tags:
    - build_iso 

- debug:
    msg: "{{ build_out }}"
  tags:
    - build_iso 

- name: Transfer file to SkullDataStore if it is mounted.
  copy:
    src: "/tmp/{{ inventory_hostname }}.iso"
    dest: /data/
  with_items: "{{ ansible_mounts }}"
  when: '"SkullDataStore" in item.device'
  tags:
    - build_iso 

- name: Remove tmp directory
  file:
    state: absent
    path: "{{ tmpdir.stat.path }}" 
  when: tmpdir.stat.exists
  tags:
    - build_iso 
